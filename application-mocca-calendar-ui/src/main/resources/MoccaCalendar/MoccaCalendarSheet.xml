<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="MoccaCalendar.MoccaCalendarSheet" locale="">
  <web>MoccaCalendar</web>
  <name>MoccaCalendarSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>MoccaCalendarClass</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
## pretty desparate measure to avoid edit form mess when embedded into another document, which in turn gets edited
#set($myEdit = ($xcontext.action == 'edit') &amp;&amp; ($doc.getURL("edit") == $xcontext.getRequest().getRequestURI()) )
#if(($xcontext.action == 'edit') &amp;&amp; !$myEdit)
#set($oldView = $xcontext.get('display'))
#set($discard = $xcontext.put('display','view'))
#end
{{html wiki="true"}}
#set ($discard = $doc.use('MoccaCalendar.MoccaCalendarClass'))
#set($discard = $xwiki.jsx.use("MoccaCalendar.MoccaCalendarSheet"))
(% class="xform" %)
(((
#if($myEdit)
  ; &lt;label for="MoccaCalendar.MoccaCalendarClass_0_title"&gt;$escapetool.xml($doc.displayPrettyName('title', false, false))&lt;/label&gt;
  : $doc.display('title')
  ; &lt;label for="MoccaCalendar.MoccaCalendarClass_0_color"&gt;$escapetool.xml($doc.displayPrettyName('color', false, false))&lt;/label&gt;
  #set ($colorPickerParams = {
    'id': 'MoccaCalendar.MoccaCalendarClass_0_color',
    'name': 'MoccaCalendar.MoccaCalendarClass_0_color',
    'value': $escapetool.xml($doc.getValue('color'))
  })
  : #colorPicker($colorPickerParams)
  ; &lt;label for="MoccaCalendar.MoccaCalendarClass_0_textColor"&gt;$escapetool.xml($doc.displayPrettyName('textColor', false, false))&lt;/label&gt;
  #set ($colorPickerParams = {
    'id': 'MoccaCalendar.MoccaCalendarClass_0_textColor',
    'name': 'MoccaCalendar.MoccaCalendarClass_0_textColor',
    'value': $escapetool.xml($doc.getValue('textColor'))
  })
  : #colorPicker($colorPickerParams)
#else
  ; &lt;label for="MoccaCalendar.MoccaCalendarClass_0_color"&gt;$escapetool.xml($doc.displayPrettyName('color', false, false))&lt;/label&gt;
  : &lt;div class="moccaevent" style="border-color:${escapetool.html($doc.display('color'))}"&gt;&amp;#160;&lt;/div&gt;
  ; &lt;label for="MoccaCalendar.MoccaCalendarClass_0_textColor"&gt;$escapetool.xml($doc.displayPrettyName('textColor', false, false))&lt;/label&gt;
  #if($doc.getValue('textColor'))
  : &lt;div class="moccaevent" style="border-color:${escapetool.html($doc.display('textColor'))}"&gt;&amp;#160;&lt;/div&gt;
  #else
  : $services.localization.render('MoccaCalendar.MoccaCalendarClass.textColor.unset')
  #end
#end
  ; &lt;label for="MoccaCalendar.MoccaCalendarClass_0_description"&gt;$escapetool.xml($doc.displayPrettyName('description', false, false))&lt;/label&gt;
  : $doc.display('description')
#if(!${myEdit})
  : $doc.display('content1')
#end

#if(${myEdit})
  #set($sources = $services.moccacalendar.getAvailableSourceConfigurations())
  #if(!$sources.isEmpty())
    #foreach($sourceName in $sources.keySet())
=== ${services.localization.render('moccacalendar.sources.config.label', [$stringtool.capitalize($sourceName)])} ===

      #set($configClassRef = $sources.get($sourceName))
      #set($configClassName = $services.model.serialize($configClassRef, 'compactwiki'))
      #set($needsSave = false)
      ## if we get a generic ref, find the object with the right name
      #if($configClassName == 'MoccaCalendar.Code.DefaultEventSourceConfigClass')
        #set($configObject = $doc.getObject($configClassName, 'source', $sourceName))
        #if($configObject == $null)
          #set($configIndex = $doc.createNewObject($configClassName))
          #set($configObject = $doc.getObject($configClassName, $configIndex))
          #set($discard = $configObject.set('source', $sourceName))
          &lt;input type="hidden" name="addedObjects" value="$escapetool.url("${configClassName}_${configIndex}")" /&gt;
        #end
        $configObject.display('source', 'hidden')
      #else
        #set($configObject = $doc.getObject($configClassName))
        #if($configObject == $null)
          #set($configIndex = $doc.createNewObject($configClassName))
          #set($configObject = $doc.getObject($configClassName, $configIndex))
          &lt;input type="hidden" name="addedObjects" value="$escapetool.url("${configClassName}_${configIndex}")" /&gt;
        #end
      #end
      #if($configObject != $null)
        #set($xclass = $configObject.xWikiClass)
        #set($discard = $doc.use($configObject))
        #foreach($property in $xclass.properties)
          #if($property.name != 'source')
            #set ($propertyId = "${xclass.name}_${configObject.number}_$property.name")
            ; &lt;label for="$escapetool.xml($propertyId)"&gt; $escapetool.xml($property.translatedPrettyName) &lt;/label&gt;
              &lt;span class="xHint"&gt;$!escapetool.xml($services.localization.render($property.hint))&lt;/span&gt;
            : $doc.display($property.name, 'edit')
          #end
        #end
      #end ## if $configObject != $null
    #end
  ##else
  ##  no sources
  #end
#end
)))

#if(!${myEdit})
  #if($oldView)
    #set($discard = $xcontext.put('display',$oldView))
  #end
#end
{{/html}}
#set($docextras=[])
{{/velocity}}</content>
  <object>
    <name>MoccaCalendar.MoccaCalendarSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>4688c5dc-ca48-4edd-9804-bb510ea0f11e</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>document.observe("dom:loaded", function(){
  var title = $$('input[name="title"]');
  if (title.length&gt;1) {
    title[1].observe('change', function(){
      var currValue = this.value;
      title[0].value = currValue;
    });
  }
});</code>
    </property>
    <property>
      <name>Change the value of title hidden input</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
